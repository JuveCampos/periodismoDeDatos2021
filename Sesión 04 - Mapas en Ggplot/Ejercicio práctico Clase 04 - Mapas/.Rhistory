# scale_fill_gradientn(colors = viridis(begin = 0,
#                                       end = 1,
#                                       n = 10)) +
scale_fill_gradientn(colors = c("red", "orange", "yellow", "green")) +
labs(title = "Indice de desarrollo humano (IDH)",
subtitle = "Año 2015",
fill = "Valor del IDH",
caption = "Fuente: Informe de Desarrollo Humano Municipal 2010-2015.\nTransformando México Desde lo Local"
) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5,
color = "gray10",
face = "bold"),
plot.subtitle = element_text(hjust = 0.5,
color = "gray50",
face = "bold"),
plot.caption = element_text(hjust = 1),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.position = "bottom"
)
?scale_fill_gradientn
# Hacemos el mapa
map_estado %>%
# Declaramos los elementos estéticos
ggplot(aes(fill = Valor)) +
# Generamos el mapa (y ponemos los perimetros en blanco)
geom_sf(color = "gray90") +
# Cambiamos los colores del relleno
scale_fill_gradientn(colors = viridis(begin = 0,
end = 1,
n = 10),
values = c(0:1)) +
# Otro ejemplo de paletas, por si viridis se te hace muy compleja :P
# Silencia la anterior y corre esta:
# scale_fill_gradientn(colors = c("red", "orange", "yellow", "green")) +
labs(title = "Indice de desarrollo humano (IDH)", # Título
subtitle = "Año 2015", # Subtitulo
fill = "Valor del IDH", # Nombre de la escala
caption = "Fuente: Informe de Desarrollo Humano Municipal 2010-2015.\nTransformando México Desde lo Local" # Pie de pagina
) +
# Subir y centrar el titulo de la barra
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5,
color = "gray10",
face = "bold"),
plot.subtitle = element_text(hjust = 0.5,
color = "gray50",
face = "bold"),
plot.caption = element_text(hjust = 1),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.position = "bottom"
)
) +
# Otro ejemplo de paletas, por si viridis se te hace muy compleja :P
# Silencia la anterior y corre esta:
# scale_fill_gradientn(colors = c("red", "orange", "yellow", "green")) +
labs(title = "Indice de desarrollo humano (IDH)", # Título
subtitle = "Año 2015", # Subtitulo
fill = "Valor del IDH", # Nombre de la escala
caption = "Fuente: Informe de Desarrollo Humano Municipal 2010-2015.\nTransformando México Desde lo Local" # Pie de pagina
# Hacemos el mapa
map_estado %>%
# Declaramos los elementos estéticos
ggplot(aes(fill = Valor)) +
# Generamos el mapa (y ponemos los perimetros en blanco)
geom_sf(color = "gray90") +
# Cambiamos los colores del relleno
scale_fill_gradientn(colors = viridis(begin = 0,
end = 1,
n = 10)
, limits = c(0,1)
) +
# Otro ejemplo de paletas, por si viridis se te hace muy compleja :P
# Silencia la anterior y corre esta:
# scale_fill_gradientn(colors = c("red", "orange", "yellow", "green")) +
labs(title = "Indice de desarrollo humano (IDH)", # Título
subtitle = "Año 2015", # Subtitulo
fill = "Valor del IDH", # Nombre de la escala
caption = "Fuente: Informe de Desarrollo Humano Municipal 2010-2015.\nTransformando México Desde lo Local" # Pie de pagina
) +
# Subir y centrar el titulo de la barra
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5,
color = "gray10",
face = "bold"),
plot.subtitle = element_text(hjust = 0.5,
color = "gray50",
face = "bold"),
plot.caption = element_text(hjust = 1),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.position = "bottom"
)
# Hacemos el mapa
mapx <- map_estado %>%
# Declaramos los elementos estéticos
ggplot(aes(fill = Valor)) +
# Generamos el mapa (y ponemos los perimetros en blanco)
geom_sf(color = "gray90") +
# Cambiamos los colores del relleno
scale_fill_gradientn(colors = viridis(begin = 0,
end = 1,
n = 10)
# # Si quieres que los valores de la escala vayan de 0 a 1
# , limits = c(0,1)
) +
# Otro ejemplo de paletas, por si viridis se te hace muy compleja :P
# Silencia la anterior y corre esta:
# scale_fill_gradientn(colors = c("red", "orange", "yellow", "green")) +
labs(title = "Indice de desarrollo humano (IDH)", # Título
subtitle = "Año 2015", # Subtitulo
fill = "Valor del IDH", # Nombre de la escala
caption = "Fuente: Informe de Desarrollo Humano Municipal 2010-2015.\nTransformando México Desde lo Local" # Pie de pagina
) +
# Subir y centrar el titulo de la barra
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
# Modificar el tema de la gráfica
theme(plot.title = element_text(hjust = 0.5,
color = "gray10",
face = "bold"),
plot.subtitle = element_text(hjust = 0.5,
color = "gray50",
face = "bold"),
plot.caption = element_text(hjust = 1),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.position = "bottom"
)
plotly::ggplotly(mapx)
mapx
plotly::ggplotly(mapx)
options(scipen = 999)
# Data preparation from Juve
# Contenido extra para armar otro tipo de mapas.
# Autor: Jorge Juvenal Campos Ferreira
# Opciones
options(scipen = 999)
# Librerias para manejar archivos geograficos
library(sf)
library(tidyverse)
library(viridis)
# funciones propias
# completaCeros <- function(x, n) {
#
# }
# Leer base de datos municipales
mpios <- st_read("https://raw.githubusercontent.com/JuveCampos/Shapes_Resiliencia_CDMX_CIDE/master/geojsons/Division%20Politica/mpios2.geojson", quiet = T) %>%
select(CVEGEO, NOM_ENT, NOM_MUN)
plot(mpios, max.plot = 1)
lobstr::obj_size(mpios) # 7 megas
# Descargar informacion de produccion agricola 2019
prod_agricola <- read_csv("http://infosiap.siap.gob.mx/gobmx/datosAbiertos/ProduccionAgricola/Cierre_agricola_mun_2019.csv",
locale = locale(encoding = "ISO-8859-1")) %>%
select(Anio,
Idestado, Nomestado,
Idmunicipio, Nommunicipio, Nomcultivo,
Valorproduccion)
# Procesamiento
datos <- prod_agricola %>%
mutate(Idestado = case_when(str_length(Idestado) == 1 ~ str_c("0", Idestado),
str_length(Idestado) == 2 ~ str_c("", Idestado)),
Idmunicipio = case_when(str_length(Idmunicipio) == 1 ~ str_c("00", Idmunicipio),
str_length(Idmunicipio) == 2 ~ str_c("0", Idmunicipio),
str_length(Idmunicipio) == 3 ~ str_c("", Idmunicipio))) %>%
mutate(CVEGEO = str_c(Idestado, Idmunicipio))
# BASES COMPLETAS ----
mpios     # Es la base geográfica
datos     # Es la base de datos de producción agrícola
# FILTRAMOS PARA Aguacate (Y si usas otro cultivo???????)
aguacate <- datos %>%
filter(Nomcultivo == "Aguacate")
cortes <- aguacate$Valorproduccion %>%
cut(breaks = 10)
min(aguacate$Valorproduccion)
max(aguacate$Valorproduccion)
quantile(aguacate$Valorproduccion)
levels(cortes)
# Generamos la base de datos para hacer el mapa
mapa <- merge(mpios, aguacate, by = "CVEGEO")
class(mapa) # Checar que este objeto es un objeto combinado "sf" y "data.frame".
# Elaboramos el primer mapa:
# 1. Primer mapa (sin información, solo polígonos)
mapa %>%
ggplot() +
geom_sf()
# 2. Segundo mapa (con la paleta de colores)
mapa %>%
ggplot(aes(fill = Valorproduccion)) +
geom_sf(color = "brown", lwd = 0) +
# scale_fill_gradientn(colours = c("blue", "green", "yellow", "red"))
scale_fill_gradientn(colours = rev(viridis::magma(n = 200)),
label = scales::dollar_format(),
breaks = c(5e8, 1e9, 2e9, 3e9))
# 3. Modificando los elementos del tema
mapa %>%
ggplot(aes(fill = Valorproduccion)) +
geom_sf(data = mpios
# %>% filter(NOM_ENT == "Michoacán")
,
fill = "gray95") +
geom_sf(color = "brown") +
scale_fill_gradientn(colours = c("yellow", "blue", "green", "red")) +
# scale_fill_viridis_b() +
theme_bw() +
theme(axis.text = element_blank(),
legend.position = "bottom",
axis.ticks = element_blank(),
panel.grid.major = element_blank())
# 3. Tema pegado de fuera
# Tema de mi mapa de ggplot
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Arial", color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
panel.border = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24, color = "#419067"),
plot.subtitle = element_text(hjust = 0.5, size = 20),
...
)
}
mapa %>%
ggplot(aes(fill = Valorproduccion)) +
geom_sf(data = mpios %>% filter(NOM_ENT == "Michoacán"),
fill = "gray95") +
geom_sf(color = "brown") +
scale_fill_gradientn(colours = c("blue", "green")) +
theme_bw() +
labs(title = "Titulo del mapa",
subtitle = "Subtitulo del mapa",
caption = "Fuente: ",
fill = "Valor de Producción") +
theme_map() +
theme(axis.text = element_blank(),
legend.position = "bottom",
axis.ticks = element_blank(),
panel.grid.major = element_blank())
# 3. Modificando los elementos del tema
mapa %>%
ggplot(aes(fill = Valorproduccion)) +
geom_sf(data = mpios
# %>% filter(NOM_ENT == "Michoacán")
,
fill = "gray95") +
geom_sf(color = "brown") +
scale_fill_gradientn(colours = c("yellow", "blue", "green", "red")) +
# scale_fill_viridis_b() +
theme_bw() +
theme(axis.text = element_blank(),
legend.position = "bottom",
axis.ticks = element_blank(),
panel.grid.major = element_blank())
# 2. Segundo mapa (con la paleta de colores)
mapa %>%
ggplot(aes(fill = Valorproduccion)) +
geom_sf(color = "brown", lwd = 0) +
# scale_fill_gradientn(colours = c("blue", "green", "yellow", "red"))
scale_fill_gradientn(colours = rev(viridis::magma(n = 200)),
label = scales::dollar_format(),
breaks = c(5e8, 1e9, 2e9, 3e9))
# 3. Modificando los elementos del tema
mapa %>%
ggplot(aes(fill = Valorproduccion)) +
geom_sf(data = mpios
# %>% filter(NOM_ENT == "Michoacán")
,
fill = "gray95") +
geom_sf(color = "brown") +
scale_fill_gradientn(colours = c("yellow", "blue", "green", "red")) +
# scale_fill_viridis_b() +
theme_bw() +
theme(axis.text = element_blank(),
legend.position = "bottom",
axis.ticks = element_blank(),
panel.grid.major = element_blank())
# Tema de mi mapa de ggplot
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Arial", color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
panel.border = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24, color = "#419067"),
plot.subtitle = element_text(hjust = 0.5, size = 20),
...
)
}
mapa %>%
ggplot(aes(fill = Valorproduccion)) +
geom_sf(data = mpios %>% filter(NOM_ENT == "Michoacán"),
fill = "gray95") +
geom_sf(color = "brown") +
scale_fill_gradientn(colours = c("blue", "green")) +
theme_bw() +
labs(title = "Titulo del mapa",
subtitle = "Subtitulo del mapa",
caption = "Fuente: ",
fill = "Valor de Producción") +
theme_map() +
theme(axis.text = element_blank(),
legend.position = "bottom",
axis.ticks = element_blank(),
panel.grid.major = element_blank())
alcaldias <- st_read("01_Datos/alcaldias.kml")
library(sf)
# 3. Podemos leer shps o kml
alcaldias <- st_read("01_Datos/alcaldias.kml")
alcaldias
plot(alcaldias)
frontera <- st_read("01_Datos/Shape Frontera/Mexico_and_US_Border.shp")
plot(frontera)
plot(mpios, max.plot = 1)
st_crs(mpios)
st_crs(mpios)
st_crs(alcaldias)
st_crs(frontera)
st_crs(alcaldias)
st_crs(mpios)
class(mpios)
View(mpios)
View(mpios)
View(mpios)
mpios
mpios
encharcamientos_2018 <- st_read("http://www.atlas.cdmx.gob.mx/datosAbiertos/SPC_Encharcamientos_2018.geojson")
plot(encharcamientos_2018)
st_crs(encharcamientos_2018)
encharcamientos_2018 <- encharcamientos_2018 %>%
st_transform(crs = 4326)
encharcamientos_2018
st_crs(encharcamientos_2018)
encharcamientos_2018 <- st_read("http://www.atlas.cdmx.gob.mx/datosAbiertos/SPC_Encharcamientos_2018.geojson")
st_crs(encharcamientos_2018) <- 4326
encharcamientos_2018 <- encharcamientos_2018 %>%
st_transform(crs = 4326)
encharcamientos_2018
# Librerias ----
# Si no tienes alguna, instálala
library(tidyverse)
library(sf)
library(viridis)
library(plotly)
# 1. Leer las bases de datos ----
# Geometrías
# Acá lo tuve que cambiar a la ruta en internet.
# Si quieres hacerle como en el video, descarga el archivo para tenerlo localmente
# Desde este enlace: https://github.com/JuveCampos/periodismoDeDatos2021/raw/main/Sesión%2004%20-%20Mapas%20en%20Ggplot/Ejercicio%20práctico%20Clase%2004%20-%20Mapas/01_Datos/mpios.geojson
# Y guardalo en tu carpeta 01_Datos
mpios <- st_read("https://raw.githubusercontent.com/JuveCampos/periodismoDeDatos2021/main/Sesión%2004%20-%20Mapas%20en%20Ggplot/Ejercicio%20práctico%20Clase%2004%20-%20Mapas/01_Datos/mpios.geojson") %>%
select(-c(COV_, COV_ID))
# 1. Leer las bases de datos ----
# Geometrías
# Acá lo tuve que cambiar a la ruta en internet.
# Si quieres hacerle como en el video, descarga el archivo para tenerlo localmente
# Desde este enlace: https://github.com/JuveCampos/periodismoDeDatos2021/raw/main/Sesión%2004%20-%20Mapas%20en%20Ggplot/Ejercicio%20práctico%20Clase%2004%20-%20Mapas/01_Datos/mpios.geojson
# Y guardalo en tu carpeta 01_Datos
mpios <- st_read("https://raw.githubusercontent.com/JuveCampos/periodismoDeDatos2021/main/Sesión%2004%20-%20Mapas%20en%20Ggplot/Ejercicio%20práctico%20Clase%2004%20-%20Mapas/01_Datos/mpios.geojson") %>%
select(-c(COV_, COV_ID))
mpios <- st_read("01_Datos/mpios.geojson") %>%
select(-c(COV_, COV_ID))
# Librerias ----
# Si no tienes alguna, instálala
library(tidyverse)
library(sf)
library(viridis)
library(plotly)
# 1. Leer las bases de datos ----
# Geometrías
# Acá lo tuve que cambiar a la ruta en internet.
# Si quieres hacerle como en el video, descarga el archivo para tenerlo localmente
# Desde este enlace: https://github.com/JuveCampos/periodismoDeDatos2021/raw/main/Sesión%2004%20-%20Mapas%20en%20Ggplot/Ejercicio%20práctico%20Clase%2004%20-%20Mapas/01_Datos/mpios.geojson
# Y guardalo en tu carpeta 01_Datos
mpios <- st_read("01_Datos/mpios.geojson") %>%
select(-c(COV_, COV_ID))
# Los objetos tipo "sf" son los que almacenan las geometrías
class(mpios)
# Verificamos las geometrias (tarda un poco)
plot(mpios, max.plot = 1)
# Vemos los años de los datos (exploración)
unique(idh$Year)
# o tambien:  2. Juntando tablas usando right_join()
mapa <- right_join(mpios, idh,
c("CVEGEO" = "CODGEO"))
# Leemos los Atributos
idh <- read_csv("01_Datos/Indice de Desarrollo Humano.csv") %>%
filter(Year == 2015)
# 1. Juntando tablas usando merge
map <- merge(x = mpios,
y = idh,
by.x = "CVEGEO",
by.y = "CODGEO",
all.x = TRUE)
# Creamos la lista de estados
estados <- unique(map$NOM_ENT)
# Seleccionamos un estado (ponle tu estado para probar)
estado_seleccionado <- "Morelos"
# Corroboramos
plot(map_estado, max.plot = 1)
# Ver el mapa:
mapx
# Vemos toda la lista de estados
estados
# Nos quedamos con solo la geometría del estado
map_estado <- map %>%
filter(NOM_ENT == estado_seleccionado)
# Hacemos el mapa
mapx <- map_estado %>%
# Declaramos los elementos estéticos
ggplot(aes(fill = Valor)) +
# Generamos el mapa (y ponemos los perimetros en blanco)
geom_sf(color = "gray90") +
# Cambiamos los colores del relleno
scale_fill_gradientn(colors = viridis(begin = 0,
end = 1,
n = 10)
# # Si quieres que los valores de la escala vayan de 0 a 1
# , limits = c(0,1)
) +
# Otro ejemplo de paletas, por si viridis se te hace muy compleja :P
# Silencia la anterior y corre esta:
# scale_fill_gradientn(colors = c("red", "orange", "yellow", "green")) +
labs(title = "Indice de desarrollo humano (IDH)", # Título
subtitle = "Año 2015", # Subtitulo
fill = "Valor del IDH", # Nombre de la escala
caption = "Fuente: Informe de Desarrollo Humano Municipal 2010-2015.\nTransformando México Desde lo Local" # Pie de pagina
) +
# Subir y centrar el titulo de la barra
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
# Modificar el tema de la gráfica
theme(plot.title = element_text(hjust = 0.5,
color = "gray10",
face = "bold"),
plot.subtitle = element_text(hjust = 0.5,
color = "gray50",
face = "bold"),
plot.caption = element_text(hjust = 1),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.position = "bottom"
)
# Convertir a mapa interactivo:
plotly::ggplotly(mapx)
ggsave(str_c("03_Lectura/mapa_",estado_seleccionado,".png"),
width = 10,
height = 6)
# Hacemos los demás mapas en bucle
for (estado_seleccionado in estados){
map_estado <- map %>%
filter(NOM_ENT == estado_seleccionado)
plot(map_estado, max.plot = 1)
# Visualizacion de datos ----
mapx <- ggplot(map_estado,
aes(fill = Valor)) +
geom_sf(color = "gray90") +
scale_fill_gradientn(colors = viridis(begin = 0,
end = 1,
n = 10)) +
labs(title = "Indice de desarrollo humano (IDH)",
subtitle = "Año 2015",
fill = "Valor del IDH",
caption = "Fuente: Informe de Desarrollo Humano Municipal 2010-2015.\nTransformando México Desde lo Local"
) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5,
color = "gray10",
face = "bold"),
plot.subtitle = element_text(hjust = 0.5,
color = "gray50",
face = "bold"),
plot.caption = element_text(hjust = 1),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.position = "bottom"
)
# Convertir a mapa interactivo
plotly::ggplotly(mapx)
# Guardar imagenes en ggplot
ggsave(str_c("03_Lectura/mapa_",estado_seleccionado,".png"),
width = 10,
height = 6)
print(str_c("Ya imprimí el estado ", estado_seleccionado))
}
